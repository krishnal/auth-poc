name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22'

jobs:
  test:
    name: Build, Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache backend dependencies
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Cache frontend dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-frontend-

    - name: Cache infrastructure dependencies
      uses: actions/cache@v3
      with:
        path: infrastructure/node_modules
        key: ${{ runner.os }}-infrastructure-${{ hashFiles('infrastructure/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-infrastructure-

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Install infrastructure dependencies
      run: cd infrastructure && npm ci

    - name: Lint backend code
      run: cd backend && npm run lint

    - name: Lint frontend code
      run: cd frontend && npm run lint

    - name: Run backend tests
      run: cd backend && npm test

    - name: Run frontend tests
      run: cd frontend && npm test -- --coverage --watchAll=false

    - name: Build backend
      run: cd backend && npm run build

    - name: Build frontend
      run: cd frontend && npm run build

    - name: Build infrastructure
      run: cd infrastructure && npm run build

    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        fail_ci_if_error: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'